//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientExampleEAP.ExampleEAPService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Example_wcf_t1809e.Models")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientExampleEAP.ExampleEAPService.Customer.CustomerStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentMoney {
            get {
                return this.CurrentMoneyField;
            }
            set {
                if ((this.CurrentMoneyField.Equals(value) != true)) {
                    this.CurrentMoneyField = value;
                    this.RaisePropertyChanged("CurrentMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityCode {
            get {
                return this.SecurityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityCodeField, value) != true)) {
                    this.SecurityCodeField = value;
                    this.RaisePropertyChanged("SecurityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientExampleEAP.ExampleEAPService.Customer.CustomerStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerStatus", Namespace="http://schemas.datacontract.org/2004/07/Example_wcf_t1809e.Models")]
        public enum CustomerStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            active = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            deactive = 0,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Example_wcf_t1809e")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExampleEAPService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetById", ReplyAction="http://tempuri.org/IService1/GetByIdResponse")]
        ClientExampleEAP.ExampleEAPService.Customer GetById(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetById", ReplyAction="http://tempuri.org/IService1/GetByIdResponse")]
        System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.Customer> GetByIdAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomer", ReplyAction="http://tempuri.org/IService1/GetAllCustomerResponse")]
        ClientExampleEAP.ExampleEAPService.Customer[] GetAllCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomer", ReplyAction="http://tempuri.org/IService1/GetAllCustomerResponse")]
        System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.Customer[]> GetAllCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccount", ReplyAction="http://tempuri.org/IService1/GetAccountResponse")]
        ClientExampleEAP.ExampleEAPService.Customer GetAccount(string code, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAccount", ReplyAction="http://tempuri.org/IService1/GetAccountResponse")]
        System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.Customer> GetAccountAsync(string code, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferMoney", ReplyAction="http://tempuri.org/IService1/TransferMoneyResponse")]
        ClientExampleEAP.ExampleEAPService.Customer[] TransferMoney(string sCode, string rCode, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferMoney", ReplyAction="http://tempuri.org/IService1/TransferMoneyResponse")]
        System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.Customer[]> TransferMoneyAsync(string sCode, string rCode, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ClientExampleEAP.ExampleEAPService.CompositeType GetDataUsingDataContract(ClientExampleEAP.ExampleEAPService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.CompositeType> GetDataUsingDataContractAsync(ClientExampleEAP.ExampleEAPService.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClientExampleEAP.ExampleEAPService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClientExampleEAP.ExampleEAPService.IService1>, ClientExampleEAP.ExampleEAPService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientExampleEAP.ExampleEAPService.Customer GetById(string code) {
            return base.Channel.GetById(code);
        }
        
        public System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.Customer> GetByIdAsync(string code) {
            return base.Channel.GetByIdAsync(code);
        }
        
        public ClientExampleEAP.ExampleEAPService.Customer[] GetAllCustomer() {
            return base.Channel.GetAllCustomer();
        }
        
        public System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.Customer[]> GetAllCustomerAsync() {
            return base.Channel.GetAllCustomerAsync();
        }
        
        public ClientExampleEAP.ExampleEAPService.Customer GetAccount(string code, string pass) {
            return base.Channel.GetAccount(code, pass);
        }
        
        public System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.Customer> GetAccountAsync(string code, string pass) {
            return base.Channel.GetAccountAsync(code, pass);
        }
        
        public ClientExampleEAP.ExampleEAPService.Customer[] TransferMoney(string sCode, string rCode, double amount) {
            return base.Channel.TransferMoney(sCode, rCode, amount);
        }
        
        public System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.Customer[]> TransferMoneyAsync(string sCode, string rCode, double amount) {
            return base.Channel.TransferMoneyAsync(sCode, rCode, amount);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ClientExampleEAP.ExampleEAPService.CompositeType GetDataUsingDataContract(ClientExampleEAP.ExampleEAPService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ClientExampleEAP.ExampleEAPService.CompositeType> GetDataUsingDataContractAsync(ClientExampleEAP.ExampleEAPService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
